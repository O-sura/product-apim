openapi: 3.0.1
info:
  title: testAPI1
  version: 1.0.0
servers:
  - url: /
security:
  - default: []
paths:
  "/users/{userID}/products/":
    get:
      parameters:
        - name: userID
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: string
      responses:
        "200":
          description: ok
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  "/users/{userID}/products/{productID}":
    get:
      parameters:
        - $ref: "#/components/parameters/userIDPathParam"
      responses:
        "200":
          description: ok
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      parameters:
        - $ref: "#/components/parameters/userIDPathParam"
      responses:
        "200":
          description: ok
          headers:
            location:
              $ref: "#/components/headers/Location"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: "#/components/parameters/ProductIDPathParam"
  "/users/{userID}/user-info":
    get:
      parameters:
        - $ref: "#/components/parameters/userIDPathParam"
      responses:
        "200":
          $ref: '#/components/responses/user_info_response'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
components:
  schemas:
      standard_response:
        required:
        - result
        type: object
        description: |
          A standard response schema representing the structure of API responses. 
          It includes a required "result" field.
  responses:
    user_info_response:
      description: Response containing user information
      content:
        application/json:
          schema:
            allOf:
              -
                $ref: '#/components/schemas/standard_response'
              -
                properties:
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        description: The username associated with the user
                        example: testUser
                      user_details:
                        type: array
                        description: An array of user details, each represented as key-value pairs
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                              example: key
                            value:
                              type: string
                              example: value
                    description: Additional properties providing detailed user information
  parameters:
    ProductIDPathParam:
      name: productID
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: string
    userIDPathParam:
      name: userID
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: string
  headers:
    Location:
      description: Location of the new created resource
      style: simple
      explode: false
      schema:
        type: string
        format: uri
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "https://test.com"
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - "*"
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - "http://api.yourdomain.com/"
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - "http://api.yourdomain.com/"
  type: http
x-wso2-basePath: /testapi1/1.0.0
x-wso2-transports:
  - http
  - https
x-wso2-application-security:
  security-types:
    - oauth2
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
